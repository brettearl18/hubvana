rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isCoach() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coach';
    }

    function isValidUser() {
      let user = request.resource.data;
      return user.name is string && 
             user.email is string && 
             user.role in ['coach', 'client'] &&
             user.createdAt is timestamp;
    }

    function isValidCheckIn() {
      let checkIn = request.resource.data;
      return checkIn.clientId is string &&
             checkIn.coachId is string &&
             checkIn.date is timestamp &&
             checkIn.status in ['pending', 'completed', 'needs_attention'] &&
             checkIn.categories is list;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && 
                      request.auth.uid == userId && 
                      isValidUser();
      allow update: if isAuthenticated() && 
                      (request.auth.uid == userId || 
                      (isCoach() && resource.data.coachId == request.auth.uid)) &&
                      isValidUser();
      allow delete: if false; // Prevent deletion
    }
    
    // Check-ins collection
    match /checkIns/{checkInId} {
      allow read: if isAuthenticated() && 
                    (resource.data.clientId == request.auth.uid || 
                     resource.data.coachId == request.auth.uid);
      allow create: if isAuthenticated() && 
                      (request.resource.data.clientId == request.auth.uid || 
                      (isCoach() && request.resource.data.coachId == request.auth.uid)) &&
                      isValidCheckIn();
      allow update: if isAuthenticated() && 
                      (resource.data.clientId == request.auth.uid || 
                      (isCoach() && resource.data.coachId == request.auth.uid)) &&
                      isValidCheckIn();
      allow delete: if isCoach() && resource.data.coachId == request.auth.uid;
    }
    
    // Templates collection
    match /templates/{templateId} {
      allow read: if isAuthenticated();
      allow write: if isCoach();
    }
  }
}